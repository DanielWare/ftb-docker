name: deployment

on:
  workflow_dispatch:
    inputs:
      mod_pack_id:
        required: true
        description: 'The Id of the FTB mod pack'
      version_id:
        required: true
        description: 'The version of the FTB mod pack'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: danielware/ftb-servers

permissions: 
  packages: write

jobs:
  build_image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - name: Get Modpack Name
        id: mod_pack_meta
        uses: fjogeleit/http-request-action@v1
        with: 
          url: 'https://api.modpacks.ch/public/modpack/${{ github.event.inputs.mod_pack_id }}'
          method: 'GET'

      - name: Get Modpack Version
        id: mod_pack_version_meta
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://api.modpacks.ch/public/modpack/${{ github.event.inputs.mod_pack_id }}/${{ github.event.inputs.version_id }}'
          method: 'GET'

      - name: Parse Modpack variables
        id: mod_variables
        run: |
          export NAME=$(echo "${{ fromJson(steps.mod_pack_meta.outputs.response).name }}" | tr [:upper:] [:lower:] | tr ' ' '_')
          echo "NAME=$NAME" >> "$GITHUB_OUTPUT"
          echo "VERSION=${{ fromJson(steps.mod_pack_version_meta.outputs.response).name }}" >> "$GITHUB_OUTPUT"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=raw,${{ steps.mod_variables.outputs.NAME }}-${{ steps.mod_variables.outputs.VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            MOD_PACK_ID=${{ github.event.inputs.mod_pack_id }}
            VERSION_ID=${{ github.event.inputs.version_id }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
